// Generated by CoffeeScript 1.8.0
(function() {
  var $, callback, gate, gated, gateother, moreTag, parts, q, qsargs, querystring, unlockAsset, _i, _len, _ref;

  $ = jQuery;

  gate = $('form.eloqua-form');

  gateother = $('span.hideifungated');

  if (!gate.length) {
    return;
  }

  moreTag = gate.parent().find('[id^=more-]');

  if (moreTag.parent('p').length) {
    moreTag = moreTag.parent();
  }

  gated = $('<div>');

  gated.addClass('gated');

  gated.hide();

  moreTag.nextUntil(gate).detach().appendTo(gated);

  moreTag.after(gated);

  querystring = location.search.substring(1);

  qsargs = {};

  _ref = querystring.split('&');
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    q = _ref[_i];
    parts = q.split('=');
    if (parts.length === 2) {
      qsargs[parts[0]] = parts[1];
    }
  }

  gate.find(':input[data-qsarg]').each(function(i, el) {
    var arg;
    el = $(el);
    arg = el.data('qsarg');
    if (arg in qsargs) {
      return el.val(qsargs[arg]);
    }
  });

  gate.on('submit', function() {
    var $this;
    $this = $(this);
    if ('checkValidity' in this && !this.checkValidity()) {
      return false;
    }
    return unlockAsset(true);
  });

  unlockAsset = function(autoDownload) {
    var asset, embed;
    gate.slideUp();
    gateother.hide();
    gated.slideDown();
    if (autoDownload) {
      asset = gated.find('a');
      embed = gated.find('embed, iframe');
      if (asset.length === 1 && embed.length === 0) {
        return window.open(asset.prop('href'), '_blank');
      }
    }
  };

  callback = function() {
    var elqFunc, hideFilledFields, lookupEloquaData, lookupNum;
    elqFunc = false;
    lookupNum = 0;
    console.log('before lookup');
    window.SetElqContent = function() {
      console.log('inside lookup');
      elqFunc = true;
      switch (lookupNum) {
        case 0:
          lookupEloquaData();
          break;
        case 1:
          hideFilledFields();
      }
      return lookupNum++;
    };
    console.log('after lookup');
    lookupEloquaData = function() {
      var email, lookupValue;
      console.log('lookupEloquaData');
      email = GetElqContentPersonalizationValue('V_ElqEmailAddress');
      lookupValue = "<C_EmailAddress>" + email + "</C_EmailAddress>";
      _elqQ.push(['elqDataLookup', 'b25edf2517d04bea9ecdc4866011e11e', lookupValue]);
      if (email === '') {
        $('#prog1').hide();
        $('#prog1 input, #prog1 select').each(function() {
          return $(this).removeAttr('required');
        });
        $('#prog2').hide();
        return $('#prog2 input, #prog2 select').each(function() {
          return $(this).removeAttr('required');
        });
      }
    };
    hideFilledFields = function() {
      var fieldQuery, fields, guidField, progOne, progTwo, progZero;
      console.log('hideFilledFields');
      if (typeof GetElqCustomerGUID === 'function') {
        guidField = gate.find(':input[name=elqCustomerGUID]');
        guidField.val(GetElqCustomerGUID);
      }
      fieldQuery = ':input:visible:not([type=submit])';
      fields = gate.find(fieldQuery);
      progZero = false;
      progOne = false;
      progTwo = false;
      fields.each(function(i, el) {
        var apiName, progStage, value;
        el = $(el);
        apiName = el.data('api-name');
        progStage = el.data('prog-stage');
        if (value = GetElqContentPersonalizationValue(apiName)) {
          if (el.prop('name') === 'emailAddress') {
            el.val(value);
            return console.log(el.prop('name') + '-' + progStage);
          } else {
            return el.remove();
          }
        } else {
          console.log(progStage);
          if (progStage === 'prog0') {
            return progZero = true;
          } else if (progStage === 'prog1') {
            return progOne = true;
          } else if (progStage === 'prog2') {
            return progTwo = true;
          }
        }
      });
      if (progZero) {
        $('#prog2').hide();
        $('#prog2 input, #prog2 select').each(function() {
          return $(this).removeAttr('required');
        });
        $('#prog1').hide();
        $('#prog1 input, #prog1 select').each(function() {
          return $(this).removeAttr('required');
        });
      } else if (progOne) {
        $('#prog1').show();
        $('#prog1 input, #prog1 select').each(function() {
          return $(this).attr('required');
        });
        $('#prog2').hide();
        $('#prog2 input, #prog2 select').each(function() {
          return $(this).removeAttr('required');
        });
      } else if (progTwo && !progOne) {
        $('#prog2').show();
        $('#prog2 input, #prog2 select').each(function() {
          return $(this).attr('required');
        });
        $('#prog1').hide();
        $('#prog1 input, #prog1 select').each(function() {
          return $(this).removeAttr('required');
        });
      }
      if (gate.find(fieldQuery).length <= 1) {
        return unlockAsset(false);
      }
    };
    console.log('elq.push');
    _elqQ.push(['elqDataLookup', 'b518cf2c082d458d86faa124f333c9f2', '']);
    return _elqQ.push(['elqGetCustomerGUID']);
  };

  setTimeout(callback, 2000);

}).call(this);


//# sourceMappingURL=gated-form.js.map
